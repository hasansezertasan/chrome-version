[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "chrome-version"
version = "0.2.0"
description = "Detect the version of Chrome installed on Windows, Linux, Mac. Cross-platform using Python, native OS detection."
authors = ["hasansezertasan <hasansezertasan@gmail.com>"]
maintainers = ["hasansezertasan <hasansezertasan@gmail.com>"]
keywords = ["google chrome version", "chrome", "google", "version"]
classifiers = [
  'Environment :: Console',
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
packages = [{ include = "chrome_version" }]
include = ["CHANGELOG.md"]
readme = "README.md"
license = "MIT"

[tool.poetry.urls]
repository = "https://github.com/hasansezertasan/chrome-version"
homepage = "https://github.com/hasansezertasan/chrome-version"
documentation = "https://github.com/hasansezertasan/chrome-version"



[tool.ruff]
# Run `ruff linter` command to see all available linters and their descriptions
target-version = "py311"
line-length = 120
select = [
  # "B",
  # "C",
  "E",
  "F",
  "W",
  "I",
  "B9",
]
ignore = [
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
  "E501", # line too long, handled by black
  "F401", # imported but unused
  "E402", # module level import not at top of file
  "E712", # comparison to True should be 'if cond is True:' or 'if cond:'
]
exclude = [
  "alembic",
  "migrations",
]
show-fixes = true

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
split_on_trailing_comma = true
skip_glob = ["**/alembic/**", "**/migrations/**"]


[tool.black]
line-length = 120
target-version = ['py311']
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.nox
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | alembic
  )/
)
'''


[tool.poe.tasks]
black = "black ."
flake8 = "flake8 ."
isort = "isort ."
bif = ["black", "isort", "flake8"]
test = "pytest -v -s"
makedocs-with-pdoc = "pdoc --html -o docs --force -c show_source_code=False central_dispatch_client"
makedocs-with-mkdocs = "mkdocs build --clean"
line-count = "pygount --format=summary"
clean = "frenchmaid clean"
requirements = "poetry export -f requirements.txt --output pyproject.txt --without-hashes"

[tool.poetry.scripts]
chrome-version = { callable = "chrome_version.__main__:app", extras = ["console"] }


[tool.poetry.dependencies]
python = ">=3.8,<4.0"
typer = { version = "*", optional = true }

[tool.poetry.extras]
console = ["typer"]
all = ["typer"]


[tool.poetry.group.dev.dependencies]
ipykernel = "^6.25.2"
isort = "^5.12.0"
black = { extras = ["jupyter"], version = "^23.9.1" }
ruff = "^0.0.287"
pre-commit = "^3.4.0"
poethepoet = "^0.22.1"
frenchmaid = "^0.2.3"
pygount = "1.6.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.2"

[tool.poetry.group.docs.dependencies]
pdoc3 = "0.10.0"
mkdocs = {extras = ["i18n"], version = "^1.5.2"}
mkdocs-material = "^8.2.15"
mkdocstrings = {extras = ["python"], version = "^0.23.0"}
